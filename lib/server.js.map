{"version":3,"sources":["../src/server.js"],"names":["request","require","DEFAULT_PUBLIC_PORT","DEFAULT_PRIVATE_PORT","DEFAULT_PUBLIC_SSL_PORT","DEFAULT_PRIVATE_SSL_PORT","DEFAULT_HOST","DEFAULT_SSL_HOST","Server","secure","_secure","sslOptions","key","readFileSync","cert","publicPort","privatePort","expressApp","webServer","use","static","resolve","__dirname","get","req","res","sendFile","listen","console","info","now","json","JSON","parse"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;;;;;AAFA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;;AAIA,IAAMC,sBAAsB,EAA5B;AACA,IAAMC,uBAAuB,IAA7B;AACA,IAAMC,0BAA0B,GAAhC;AACA,IAAMC,2BAA2B,IAAjC;AACA,IAAMC,eAAe,0BAArB;AACA,IAAMC,mBAAmB,2BAAzB;;IAEqBC,M;AAEnB,oBAA2B;AAAA,QAAfC,MAAe,uEAAN,IAAM;;AAAA;;AAEzB,SAAKC,OAAL,GAAeD,MAAf;;AAEA,QAAME,aAAa;AACjBC,WAAK,aAAGC,YAAH,CAAgB,kDAAhB,CADY;AAEjBC,YAAM,aAAGD,YAAH,CAAgB,kDAAhB;AAFW,KAAnB;;AAKA,SAAKE,UAAL,GAAkBN,SAASL,uBAAT,GAAmCF,mBAArD;AACA,SAAKc,WAAL,GAAmBP,SAASJ,wBAAT,GAAoCF,oBAAvD;AACA,SAAKc,UAAL,GAAkB,wBAAlB;AACA,SAAKC,SAAL,GAAiBT,SAAS,gBAAMD,MAAN,CAAaG,UAAb,EAAyB,KAAKM,UAA9B,CAAT,GAAqD,eAAKT,MAAL,CAAY,KAAKS,UAAjB,CAAtE;AACF,SAAKA,UAAL,CAAgBE,GAAhB,CAAoB,kBAAQC,MAAR,CAAe,eAAKC,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,QAA9B,CAAf,CAApB;AACE,SAAKL,UAAL,CAAgBM,GAAhB,CAAoB,GAApB,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrCA,UAAIC,QAAJ,CAAa,eAAKL,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,QAA9B,EAAwC,YAAxC,CAAb;AACD,KAFD;AAID;;;;6BAEQ;AAAA;;AACP,WAAKJ,SAAL,CAAeS,MAAf,CAAsB,KAAKX,WAA3B,EAAwC,YAAM;AAC5CY,gBAAQC,IAAR,CAAa,iBAAOC,GAAP,EAAb,sBAA6C,MAAKf,UAAlD,eAAsE,MAAKC,WAA3E;AACD,OAFD;AAGD;;;2BAEMe,I,EAAM;AACX,aAAO,QAAOA,IAAP,yCAAOA,IAAP,OAAgB,QAAhB,GAA2BA,IAA3B,GAAkCC,KAAKC,KAAL,CAAWF,IAAX,CAAzC;AACD;;;;;;kBA9BkBvB,M","file":"server.js","sourcesContent":["import express from 'express'\nimport fs from 'fs'\nimport path from 'path'\nimport https from 'https'\nimport http from 'http'\nconst request = require('request')\n\nimport Common from './common'\n\nconst DEFAULT_PUBLIC_PORT = 80\nconst DEFAULT_PRIVATE_PORT = 3001\nconst DEFAULT_PUBLIC_SSL_PORT = 444\nconst DEFAULT_PRIVATE_SSL_PORT = 3444\nconst DEFAULT_HOST = 'http://mprj.cloudapp.net'\nconst DEFAULT_SSL_HOST = 'https://mprj.cloudapp.net'\n\nexport default class Server {\n\n  constructor(secure = true) {\n\n    this._secure = secure  \n   \n    const sslOptions = {\n      key: fs.readFileSync('/home/azemour/yakapa/yakapa-storage/yakapass.pem'),\n      cert: fs.readFileSync('/home/azemour/yakapa/yakapa-storage/yakapass.crt')\n    }\n\n    this.publicPort = secure ? DEFAULT_PUBLIC_SSL_PORT : DEFAULT_PUBLIC_PORT\n    this.privatePort = secure ? DEFAULT_PRIVATE_SSL_PORT : DEFAULT_PRIVATE_PORT\n    this.expressApp = express()    \n    this.webServer = secure ? https.Server(sslOptions, this.expressApp) : http.Server(this.expressApp)    \n\t\tthis.expressApp.use(express.static(path.resolve(__dirname, '..', 'static')))\n    this.expressApp.get('*', (req, res) => {\n      res.sendFile(path.resolve(__dirname, '..', 'static', 'index.html'))\n    })    \n\t\t\n  }   \n  \n  listen() {\n    this.webServer.listen(this.privatePort, () => {\n      console.info(Common.now(), `Listening on *:${this.publicPort} --> *:${this.privatePort}`)\n    })    \n  } \n\t\n  toJson(json) {\n    return typeof json === 'object' ? json : JSON.parse(json)\n  }\n\n}"]}